package lessons.lesson03.homework

//Название мероприятия
val event_name: String
//Дата проведения
var event_date: String
//Место проведения
var event_place: String
//Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
private var event_budget_detailed: String
//Количество участников
var event_guests: Int
//Длительность хакатона
var event_dur: Int
//Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
private val event_catering: String
//Текущее состояние хакатона (статус)
var event_status: String
//Список спонсоров
var event_sponsors: String
//Бюджет мероприятия
private var event_budget: Int
//Текущий уровень доступа к интернету
var event_network_access: Boolean
//Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
private var event_logistics: String
//Количество команд
private val event_teams: Int
//Перечень задач
private var event_tasks: String
//План эвакуации
val event_evaciation: String
//Список доступного оборудования (всё, что выделено для использования на мероприятии)
val event_appliances_list: String
//Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
var event_appliances_available: "String"
//График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
lateinit var event_catering: "String"
//План мероприятий на случай сбоев
val event_planb: String
//Список экспертов и жюри
var event_court: String
//Политика конфиденциальности
var event_confidential_policy: String
//Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
private var event_reviews: String
//Текущая температура в помещении
val event_temp: Int
//Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
private var event_monitoring_data: String
//Регулятор скорости интернета (понижающий коэффициент, например 0.5)
private var event_network_reg: Float
//Уровень освещения
private var event_light: Float
//Лог событий мероприятия
var event_news: String
//Возможность получения медицинской помощи прямо на мероприятии (да/нет)
val event_med: Boolean
//Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
val event_safety: String
//Регистрационный номер мероприятия
val event_ID: Int
//Максимально допустимый уровень шума в помещении хакатона.
var event_sound: Int
//Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
private var event_loud: Boolean
//План взаимодействия с прессой
private val event
//Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
private var event_projects: String
//Статус получения всех необходимых разрешений для проведения мероприятия
private var event_permissions: Boolean
//Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
var event_spec_appl: Boolean
//Список партнеров мероприятия
var event_partners: String
//Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
lateinit valvevent_report: String
//Внутренние правила распределения призов
private val event_awards_rules: String
//Список разыгрываемых призов
var event_prizes: String
//Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
private var event_emergency_contacts: String
//Особые условия для участников с ограниченными возможностями
var event_additional_needs: String
//Общее настроение участников (определяется опросами)
var event_mood: String
//Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
lateinit var event_plan: String
//Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
lateinit val event_special_guest: String
//Максимальное количество людей, которое может вместить место проведения.
var event_max_capacity: Int
//Количество часов, отведенное каждой команде для работы над проектом.
var event_timing: Int